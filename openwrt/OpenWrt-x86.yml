# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-x86

on:
  workflow_dispatch:
  release:
    types: [published]
    
permissions:
  contents: read

jobs:

  build_openwrt:

    permissions:
      contents: write # for release creation

    name: Build OpenWrt firmware

    runs-on: ubuntu-22.04

    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Install Clash Binaries
        run: |
          cd package/base-files/files
          mkdir -p etc/openclash/core
          # for updates, go to: https://github.com/Dreamacro/clash/releases
          # wget -qO- https://github.com/Dreamacro/clash/releases/download/v1.10.0/clash-linux-amd64-v1.10.0.gz | gunzip -c > etc/openclash/core/clash
          wget -qO- https://raw.githubusercontent.com/vernesong/OpenClash/master/core-lateset/dev/clash-linux-amd64.tar.gz | tar xOvz > etc/openclash/core/clash
          chmod +x etc/openclash/core/clash*

      - name: Modify network configuration
        run: |
          sed -i 's/lan) ipad=${ipaddr:-"192.168.1.1"} ;;/lan) ipad=${ipaddr:-"192.168.87.1"} ;;/g' ./package/base-files/files/bin/config_generate

      - name: Update feeds
        run: |
          sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' ./feeds.conf.default
          sed -i '$a src-git small https://github.com/kenzok8/small' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_DOCKER_CGROUP_OPTIONS=y
          CONFIG_DOCKER_NET_MACVLAN=y
          CONFIG_DOCKER_STO_EXT4=y
          CONFIG_KERNEL_CGROUP_DEVICE=y
          CONFIG_KERNEL_CGROUP_FREEZER=y
          CONFIG_KERNEL_CGROUP_NET_PRIO=y
          CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
          CONFIG_KERNEL_EXT4_FS_SECURITY=y
          CONFIG_KERNEL_FS_POSIX_ACL=y
          CONFIG_KERNEL_NET_CLS_CGROUP=y
          CONFIG_PACKAGE_6in4=y
          # CONFIG_PACKAGE_UnblockNeteaseMusic-Go is not set
          # CONFIG_PACKAGE_adbyby is not set
          # CONFIG_PACKAGE_autosamba is not set
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_btrfs-progs=y
          CONFIG_PACKAGE_cgroupfs-mount=y
          CONFIG_PACKAGE_containerd=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_docker=y
          CONFIG_PACKAGE_dockerd=y
          # CONFIG_PACKAGE_etherwake is not set
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_ip6tables-extra=y
          CONFIG_PACKAGE_ip6tables-mod-nat=y
          # CONFIG_PACKAGE_iptables-mod-ipsec is not set
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_kmod-asn1-encoder=y
          CONFIG_PACKAGE_kmod-br-netfilter=y
          CONFIG_PACKAGE_kmod-crypto-ccm=y
          CONFIG_PACKAGE_kmod-crypto-cmac=y
          CONFIG_PACKAGE_kmod-crypto-ctr=y
          # CONFIG_PACKAGE_kmod-crypto-deflate is not set
          # CONFIG_PACKAGE_kmod-crypto-echainiv is not set
          # CONFIG_PACKAGE_kmod-crypto-kpp is not set
          CONFIG_PACKAGE_kmod-crypto-rng=y
          CONFIG_PACKAGE_kmod-crypto-seqiv=y
          CONFIG_PACKAGE_kmod-crypto-sha256=y
          CONFIG_PACKAGE_kmod-crypto-sha512=y
          CONFIG_PACKAGE_kmod-dax=y
          CONFIG_PACKAGE_kmod-dm=y
          CONFIG_PACKAGE_kmod-dnsresolver=y
          CONFIG_PACKAGE_kmod-dummy=y
          CONFIG_PACKAGE_kmod-fs-btrfs=y
          CONFIG_PACKAGE_kmod-fs-cifs=y
          CONFIG_PACKAGE_kmod-ikconfig=y
          CONFIG_PACKAGE_kmod-inet-diag=y
          CONFIG_PACKAGE_kmod-ip6tables=y
          CONFIG_PACKAGE_kmod-ip6tables-extra=y
          # CONFIG_PACKAGE_kmod-ipsec is not set
          # CONFIG_PACKAGE_kmod-ipt-ipsec is not set
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          # CONFIG_PACKAGE_kmod-iptunnel6 is not set
          CONFIG_PACKAGE_kmod-keys-encrypted=y
          CONFIG_PACKAGE_kmod-keys-trusted=y
          CONFIG_PACKAGE_kmod-lib-raid6=y
          CONFIG_PACKAGE_kmod-lib-xor=y
          CONFIG_PACKAGE_kmod-lib-zstd=y
          CONFIG_PACKAGE_kmod-nf-ipt6=y
          CONFIG_PACKAGE_kmod-nf-ipvs=y
          CONFIG_PACKAGE_kmod-nf-log6=y
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-nf-reject6=y
          CONFIG_PACKAGE_kmod-oid-registry=y
          CONFIG_PACKAGE_kmod-random-core=y
          CONFIG_PACKAGE_kmod-sit=y
          CONFIG_PACKAGE_kmod-tpm=y
          CONFIG_PACKAGE_kmod-veth=y
          # CONFIG_PACKAGE_kmod-wireguard is not set
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libdb47=y
          CONFIG_PACKAGE_libdevmapper=y
          CONFIG_PACKAGE_liblzo=y
          CONFIG_PACKAGE_libnetwork=y
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libseccomp=y
          CONFIG_PACKAGE_libyaml=y
          CONFIG_PACKAGE_lsblk=y
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-adbyby-plus is not set
          CONFIG_PACKAGE_luci-app-argonne-config=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Trojan is not set
          CONFIG_PACKAGE_luci-app-cifs-mount=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs=y
          CONFIG_PACKAGE_luci-app-dockerman=y
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
          CONFIG_PACKAGE_luci-app-openclash=y
          # CONFIG_PACKAGE_luci-app-unblockmusic is not set
          CONFIG_PACKAGE_luci-app-uugamebooster=y
          # CONFIG_PACKAGE_luci-app-wireguard is not set
          # CONFIG_PACKAGE_luci-app-wol is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-argonne-config-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-cifs-mount-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-uugamebooster-zh-cn=y
          CONFIG_PACKAGE_luci-lib-docker=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          # CONFIG_PACKAGE_luci-proto-wireguard is not set
          CONFIG_PACKAGE_luci-theme-argonne=y
          CONFIG_PACKAGE_mount-utils=y
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-forwardable=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-strscan=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_runc=y
          # CONFIG_PACKAGE_strongswan is not set
          CONFIG_PACKAGE_tini=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_uugamebooster=y
          # CONFIG_PACKAGE_wireguard-tools is not set
          # CONFIG_PACKAGE_wol is not set
          CONFIG_TARGET_ROOTFS_PARTSIZE=480
          CONFIG_GNUTLS_ALPN=y
          CONFIG_GNUTLS_ANON=y
          # CONFIG_GNUTLS_CRYPTODEV is not set
          CONFIG_GNUTLS_DTLS_SRTP=y
          # CONFIG_GNUTLS_EXT_LIBTASN1 is not set
          CONFIG_GNUTLS_HEARTBEAT=y
          CONFIG_GNUTLS_OCSP=y
          # CONFIG_GNUTLS_PKCS11 is not set
          CONFIG_GNUTLS_PSK=y
          # CONFIG_GNUTLS_SRP is not set
          # CONFIG_GNUTLS_TPM is not set
          # CONFIG_LIBNETTLE_MINI is not set
          CONFIG_PACKAGE_attr=y
          CONFIG_PACKAGE_avahi-dbus-daemon=y
          CONFIG_PACKAGE_dbus=y
          CONFIG_PACKAGE_libavahi-client=y
          CONFIG_PACKAGE_libavahi-dbus-support=y
          CONFIG_PACKAGE_libdaemon=y
          CONFIG_PACKAGE_libdbus=y
          CONFIG_PACKAGE_libexpat=y
          CONFIG_PACKAGE_libgnutls=y
          CONFIG_PACKAGE_libnettle=y
          CONFIG_PACKAGE_libpopt=y
          CONFIG_PACKAGE_libtasn1=y
          CONFIG_PACKAGE_libtirpc=y
          CONFIG_PACKAGE_liburing=y
          CONFIG_PACKAGE_luci-app-samba4=y
          # CONFIG_PACKAGE_luci-i18n-samba4-ca is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-cs is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-de is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-el is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-en is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-es is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-fr is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-he is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-hu is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-it is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-ja is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-ms is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-no is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-pl is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-pt is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-pt-br is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-ro is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-ru is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-sk is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-sv is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-tr is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-uk is not set
          # CONFIG_PACKAGE_luci-i18n-samba4-vi is not set
          CONFIG_PACKAGE_luci-i18n-samba4-zh-cn=y
          # CONFIG_PACKAGE_luci-i18n-samba4-zh-tw is not set
          CONFIG_PACKAGE_samba4-libs=y
          CONFIG_PACKAGE_samba4-server=y
          CONFIG_PACKAGE_wsdd2=y
          # CONFIG_SAMBA4_SERVER_AD_DC is not set
          CONFIG_SAMBA4_SERVER_AVAHI=y
          CONFIG_SAMBA4_SERVER_NETBIOS=y
          CONFIG_SAMBA4_SERVER_VFS=y
          # CONFIG_SAMBA4_SERVER_VFSX is not set
          CONFIG_SAMBA4_SERVER_WSDD2=y
          EOF

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true